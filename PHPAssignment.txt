<?php
// Create an associative array
$assocArray = [
    'apple' => 'red',
    'banana' => 'yellow',
    'cherry' => 'red',
    'date' => 'brown',
    'grape' => 'purple'
];

// current() - Returns the current element's value
echo "Current Element: " . current($assocArray) . "\n";

// next() - Move the internal pointer to the next element
next($assocArray);
echo "Next Element: " . current($assocArray) . "\n";

// key() - Returns the current element's key
echo "Current Key: " . key($assocArray) . "\n";

// end() - Move the internal pointer to the last element
end($assocArray);
echo "End Element: " . current($assocArray) . "\n";

// previous() - Move the internal pointer to the previous element
previous($assocArray);
echo "Previous Element: " . current($assocArray) . "\n";

// reset() - Move the internal pointer to the first element
reset($assocArray);
echo "Reset Element: " . current($assocArray) . "\n";

// Sorting of all index array with sort() and rsort()
$indexArray = ['banana', 'apple', 'grape', 'cherry', 'date'];

sort($indexArray);
echo "Sorted Index Array: ";
print_r($indexArray);

rsort($indexArray);
echo "Reverse Sorted Index Array: ";
print_r($indexArray);

// Sorting of an associative array with asort() and arsort()
$assocArray2 = [
    'banana' => 'yellow',
    'apple' => 'red',
    'grape' => 'purple',
    'cherry' => 'red',
    'date' => 'brown'
];

asort($assocArray2);
echo "Sorted Associative Array (by value): ";
print_r($assocArray2);

arsort($assocArray2);
echo "Reverse Sorted Associative Array (by value): ";
print_r($assocArray2);

// Ksort() and krsort() for sorting associative array by key
ksort($assocArray2);
echo "Sorted Associative Array (by key): ";
print_r($assocArray2);

krsort($assocArray2);
echo "Reverse Sorted Associative Array (by key): ";
print_r($assocArray2);

// Merging two arrays
$mergedArray = array_merge($assocArray, $assocArray2);
echo "Merged Arrays: ";
print_r($mergedArray);
?>
